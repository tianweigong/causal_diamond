mean(acc.sub.n$acc)
sd(acc.sub.n$acc)
t.test(acc.sub.n$acc, mu = .95)
setwd("~/Documents/GitHub/causal_diamond/causal_diamond/code/generation")
#+ General settings, echo = FALSE, results = 'hide' -------------------
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
#+ load packages -------------------
#' # load packages
library(tidyr)
library(dplyr)
library(ggplot2)
library(e1071)
# rm(list=ls())
#+ test parameters -------------------
#' # test parameters
data.frame(Time = seq(0, 10, length.out = 1000)) %>%
mutate(exp = dgamma(Time, shape = 1, rate =1 )) %>%
gather(fun, Probability, c(exp)) %>%
mutate(Form = factor(fun, levels = c('exp'),
labels = c('demo'))) %>%
ggplot(aes(x = Time, y = Probability)) +
# geom_vline(xintercept = c(3.5)) +
# annotate("rect",xmin = 0,xmax = 3.5,ymin = 0,ymax = 0.8,alpha = 0.2,fill = "blue") +
geom_point() +
theme_bw() +
theme(panel.grid = element_blank()) +
ggtitle('Examples of causal delays')
k_e = 100
r_e = 20 #e->e: m=5,var=0.25
k_a = 1
##
# filepath="../../stimulus/exp1/"
filepath="../model/dynamic_analysis/"
filelist=c("gg1.Rda","gg2.Rda","pg1.Rda","pg2.Rda","ng1.Rda","ng2.Rda",
"gp1.Rda","gp2.Rda","pp1.Rda","pp2.Rda","np1.Rda","np2.Rda",
"gn1.Rda","gn2.Rda","pn1.Rda","pn2.Rda","nn1.Rda","nn2.Rda")
pic.model=as.data.frame(matrix(NA, nrow = 0, ncol = 4))%>%
setNames(c("trial_id","component","state","ratio"))
for (run in 1:18){
pic.sub=as.data.frame(matrix(NA, nrow = 6, ncol = 4))%>%
setNames(c("trial_id","component","state","ratio"))
load(paste(filepath,filelist[run],sep = ""))
online_inder$trial_id=run
online_inder= online_inder%>% subset(model=="normative")
online_inder=online_inder %>% subset(stage==5)
online_inder$ratio=online_inder$ratio/sum(online_inder$ratio) #normalization
pic.sub$component=c("A","A","A","B","B","B")
pic.sub$state=c("G","N","P","G","N","P")
pic.sub$trial_id=run
pic.sub$ratio[1]=sum(online_inder$ratio[online_inder$A_state=="G"])
pic.sub$ratio[2]=sum(online_inder$ratio[online_inder$A_state=="N"])
pic.sub$ratio[3]=sum(online_inder$ratio[online_inder$A_state=="P"])
pic.sub$ratio[4]=sum(online_inder$ratio[online_inder$B_state=="G"])
pic.sub$ratio[5]=sum(online_inder$ratio[online_inder$B_state=="N"])
pic.sub$ratio[6]=sum(online_inder$ratio[online_inder$B_state=="P"])
pic.model=rbind(pic.model,pic.sub)
}
pic.label=c("1"="GG1","2"="GG2","3"="PG1","4"="PG2","5"="NG1","6"="NG2",
"7"="GP1","8"="GP2","9"="PP1","10"="PP2","11"="NP1","12"="NP2",
"13"="GN1","14"="GN2","15"="PN1","16"="PN2","17"="NN1","18"="NN2")
ggplot(pic.model,aes(x=component, y=ratio,fill=state))+
geom_bar(stat='identity',position="dodge",colour="black")+
facet_wrap(~trial_id,nrow=3,labeller = as_labeller(pic.label))+
xlab("component")
View(pic.model)
a_sta=rep(c("G","G","P","P","N","N"),3)
a_sta
b_sta=c(rep("G",6),rep("P",6),rep("N",6))
b_sta
acc.model.a=pic.model %>% subset(component=="A")
acc.model.a
pic.acc.a=as.data.frame(matrix(NA, nrow = 6, ncol = 4))%>%
setNames(c("trial_id","component","state","ratio"))
for (i in 1:18){
pic.acc.a$trial_id[i]=i
pic.acc.a$component[i]="A"
pic.acc.a$state[i]=a_sta[i]
pic.acc.a$ratio[i]=pic.model$ratio[pic.model$A_state==a_sta[i] && pic.model$trial_id==i]
}
pic.model$ratio[pic.model$A_state==a_sta[i] && pic.model$trial_id==i]
a_sta[i]
pic.model$A_state==a_sta[i]
pic.acc.a=as.data.frame(matrix(NA, nrow = 6, ncol = 4))%>%
setNames(c("trial_id","component","state","ratio"))
for (i in 1:18){
pic.acc.a$trial_id[i]=i
pic.acc.a$component[i]="A"
pic.acc.a$state[i]=a_sta[i]
pic.acc.a$ratio[i]=pic.model$ratio[pic.model$component=="A" & pic.model$state==a_sta[i] && pic.model$trial_id==i]
}
pic.model$ratio[pic.model$component=="A" & pic.model$state==a_sta[i] && pic.model$trial_id==i]
pic.model$component=="A"
pic.model$state==a_sta[i]
pic.model$ratio[pic.model$component=="A" & pic.model$state==a_sta[i] & pic.model$trial_id==i]
pic.acc.a=as.data.frame(matrix(NA, nrow = 6, ncol = 4))%>%
setNames(c("trial_id","component","state","ratio"))
for (i in 1:18){
pic.acc.a$trial_id[i]=i
pic.acc.a$component[i]="A"
pic.acc.a$state[i]=a_sta[i]
pic.acc.a$ratio[i]=pic.model$ratio[pic.model$component=="A" & pic.model$state==a_sta[i] & pic.model$trial_id==i]
}
pic.model$ratio[pic.model$component=="A" & pic.model$state==a_sta[i] & pic.model$trial_id==i]
View(pic.acc.a)
pic.acc.a=as.data.frame(matrix(NA, nrow = 18, ncol = 4))%>%
setNames(c("trial_id","component","state","ratio"))
for (i in 1:18){
pic.acc.a$trial_id[i]=i
pic.acc.a$component[i]="A"
pic.acc.a$state[i]=a_sta[i]
pic.acc.a$ratio[i]=pic.model$ratio[pic.model$component=="A" & pic.model$state==a_sta[i] & pic.model$trial_id==i]
}
View(pic.acc.a)
View(pic.acc.a)
pic.acc.a=as.data.frame(matrix(NA, nrow = 18, ncol = 4))%>%
setNames(c("trial_id","component","state","ratio"))
pic.acc.b=as.data.frame(matrix(NA, nrow = 18, ncol = 4))%>%
setNames(c("trial_id","component","state","ratio"))
for (i in 1:18){
pic.acc.a$trial_id[i]=i
pic.acc.a$component[i]="A"
pic.acc.a$state[i]=a_sta[i]
pic.acc.a$ratio[i]=pic.model$ratio[pic.model$component=="A" & pic.model$state==a_sta[i] & pic.model$trial_id==i]
pic.acc.a$trial_id[i]=i
pic.acc.a$component[i]="B"
pic.acc.a$state[i]=b_sta[i]
pic.acc.a$ratio[i]=pic.model$ratio[pic.model$component=="B" & pic.model$state==b_sta[i] & pic.model$trial_id==i]
}
View(pic.acc.a)
View(pic.acc.a)
View(pic.acc.b)
pic.acc.b=as.data.frame(matrix(NA, nrow = 18, ncol = 4))%>%
setNames(c("trial_id","component","state","ratio"))
pic.acc.a=as.data.frame(matrix(NA, nrow = 18, ncol = 4))%>%
setNames(c("trial_id","component","state","ratio"))
pic.acc.b=as.data.frame(matrix(NA, nrow = 18, ncol = 4))%>%
setNames(c("trial_id","component","state","ratio"))
for (i in 1:18){
pic.acc.a$trial_id[i]=i
pic.acc.a$component[i]="A"
pic.acc.a$state[i]=a_sta[i]
pic.acc.a$ratio[i]=pic.model$ratio[pic.model$component=="A" & pic.model$state==a_sta[i] & pic.model$trial_id==i]
pic.acc.b$trial_id[i]=i
pic.acc.b$component[i]="B"
pic.acc.b$state[i]=b_sta[i]
pic.acc.b$ratio[i]=pic.model$ratio[pic.model$component=="B" & pic.model$state==b_sta[i] & pic.model$trial_id==i]
}
View(pic.acc.a)
View(pic.acc.b)
pic.acc=rbind(pic.acc.a,pic.acc.b)
mean(pic.acc)
mean(pic.acc$ratio)
pic.acc.g=pic.acc %>% subset(state="G")
pic.acc.g=pic.acc %>% subset(state="G")
mean(pic.acc.g$ratio)
pic.acc.g=pic.acc %>% subset(state=="G")
mean(pic.acc.g$ratio)
pic.acc.p=pic.acc %>% subset(state=="P")
mean(pic.acc.g$ratio)
pic.acc.p=pic.acc %>% subset(state=="P")
pic.acc.p=pic.acc %>% subset(state=="P")
mean(pic.acc.p$ratio)
pic.acc.n=pic.acc %>% subset(state=="N")
mean(pic.acc.n$ratio)
acc.sub.total=acc.sub %>%  summarySE(measurevar = "acc",groupvars = c("subject"))
mean(acc.sub.total$acc)
sd(acc.sub.total$acc)
t.test(acc.sub.total$acc, mu = .33)
t.test(acc.sub.total$acc, mu = .97)
acc.sub.g=acc.sub %>% subset(pro=="G")
mean(acc.sub.g$acc)
sd(acc.sub.g$acc)
t.test(acc.sub.g$acc, mu = .33)
t.test(acc.sub.g$acc, mu = 1)
acc.sub.p=acc.sub %>% subset(pro=="P")
mean(acc.sub.p$acc)
sd(acc.sub.p$acc)
t.test(acc.sub.p$acc, mu = .33)
t.test(acc.sub.p$acc, mu = .98)
acc.sub.n=acc.sub %>% subset(pro=="N")
mean(acc.sub.n$acc)
sd(acc.sub.n$acc)
t.test(acc.sub.n$acc, mu = .33)
t.test(acc.sub.n$acc, mu = .94)
#+ confound: position -------------------
#' # confound: position
pos.sub.a=summarySE(df.final,measurevar = "acc_a",groupvars = c("subject","A_pro","position")) %>%
melt(id.vars = c("subject","A_pro","position"), value.name = "acc")%>%
subset(variable=="acc_a")
colnames(pos.sub.a)[which(colnames(pos.sub.a)=="A_pro")]="pro"
pos.sub.b=summarySE(df.final,measurevar = "acc_b",groupvars = c("subject","B_pro","position"))%>%
melt(id.vars = c("subject","B_pro","position"), value.name = "acc")%>%
subset(variable=="acc_b")
colnames(pos.sub.b)[which(colnames(pos.sub.b)=="B_pro")]="pro"
pos.sub=rbind(pos.sub.a,pos.sub.b) %>%
summarySE(measurevar = "acc",groupvars = c("subject","pro","position"))
View(pos.sub)
View(df.final)
df.final
1080/60
View(df.final)
#+ choice analysis -------------------
#' # choice analysis
choi.a=summarySE(df.final,measurevar = "A_pro",groupvars = c("trial_id")) %>%
melt(id.vars = c("trial_id"), value.name = "A_pro")%>%
subset(variable=="A_pro")
View(choi.a)
#+ choice analysis -------------------
#' # choice analysis
choi.a=melt(id.vars = c("trial_id"), value.name = c("A_pro","B_pro")
#+ choice analysis -------------------
#' # choice analysis
choi.a=melt(id.vars = c("trial_id"), value.name = c("A_pro","B_pro"))
#+ choice analysis -------------------
#' # choice analysis
choi.a=melt(id.vars = c("trial_id"), value.name = c("A_pro","B_pro"))
#+ choice analysis -------------------
#' # choice analysis
choi.a=df.final %>%melt(id.vars = c("trial_id"), value.name = c("A_pro","B_pro"))
#+ choice analysis -------------------
#' # choice analysis
choi=c(df.final$A_pro,df.final$B_pro)
summary(choi)
sum(choi=="G")
sum(choi=="G")/(36*60)
sum(choi=="P")/(36*60)
sum(choi=="N")/(36*60)
sum(choi=="G")
sum(choi=="P")
#+ choice analysis -------------------
#' # choice analysis
choi=c(df.final$A_state,df.final$B_state)
sum(choi=="G")/(36*60)
sum(choi=="P")/(36*60)
sum(choi=="N")/(36*60)
choi=df.final %>% subset(select=c("A_pro","B_pro","A_state","B_state"))
choi
choi=data.frame(a=rep(1,2))
choi
choi=data.frame(pro=c(df.final$A_pro,df.final$B_pro),state=c(df.final$A_state,df.final$B_state))
choi
sum(choi[choi$pro=="G" & choi$state=="G"])
count(choi[choi$pro=="G" & choi$state=="G"])
choi
choi$pro=="G" & choi$state=="G"
count(choi$pro=="G" & choi$state=="G")
count(choi$pro=="G" & choi$state=="G") /count(choi$pro=="G")
count(choi$pro=="G" & choi$state=="G") /sum(choi$pro=="G")
sum(choi$pro=="G" & choi$state=="G") /sum(choi$pro=="G")
sum(choi$pro=="G" & choi$state=="P") /sum(choi$pro=="G")
sum(choi$pro=="G" & choi$state=="N") /sum(choi$pro=="G")
sum(choi$pro=="G" & choi$state=="G") /sum(choi$pro=="G")
sum(choi$pro=="G" & choi$state=="N") /sum(choi$pro=="G")
sum(choi$pro=="G" & choi$state=="P") /sum(choi$pro=="G")
sum(choi$pro=="N" & choi$state=="G") /sum(choi$pro=="N")
sum(choi$pro=="N" & choi$state=="N") /sum(choi$pro=="N")
sum(choi$pro=="N" & choi$state=="P") /sum(choi$pro=="N")
sum(choi$pro=="N" & choi$state=="G") /sum(choi$pro=="N")
sum(choi$pro=="N" & choi$state=="N") /sum(choi$pro=="N")
sum(choi$pro=="N" & choi$state=="P") /sum(choi$pro=="N")
sum(choi$pro=="P" & choi$state=="G") /sum(choi$pro=="P")
sum(choi$pro=="P" & choi$state=="N") /sum(choi$pro=="P")
sum(choi$pro=="P" & choi$state=="P") /sum(choi$pro=="P")
sum(choi$pro=="G" & choi$state=="G") /sum(choi$pro=="G")
sum(choi$pro=="G" & choi$state=="N") /sum(choi$pro=="G")
sum(choi$pro=="G" & choi$state=="P") /sum(choi$pro=="G")
MySubFit9 <-function(){
st_a=pro_a=c("G","P","N","G","P","N","G","P","N")
st_b=pro_b=c("G","G","G","P","P","P","N","N","N")
md.sub=as.data.frame(matrix(NA,ncol=7,nrow=18*9)) %>%
setNames(c("trial_id","A_pro","B_pro","A_state","B_state","count","hm"))
for (i in 1:18){
for (j in 1:length(st_a)){
p=(i-1)*9+j
md.sub$trial_id[p]=i
md.sub$A_pro[p]=pro_a[ceiling(i/2)]
md.sub$B_pro[p]=pro_b[ceiling(i/2)]
md.sub$A_state[p]=st_a[j]
md.sub$B_state[p]=st_b[j]
md.sub$count[p]=df.final %>% subset(trial_id==i & A_state== st_a[j] & B_state==st_b[j]) %>% nrow()
md.sub$hm[p]=md.sub$count[p]/(df.final %>% subset(trial_id==i) %>% nrow())
}
}
return(md.sub)
}
MySigFit9 <-function(sub_id){
df.sig=df.final %>% subset(subject==sub_id)
st_a=pro_a=c("G","P","N","G","P","N","G","P","N")
st_b=pro_b=c("G","G","G","P","P","P","N","N","N")
md.sub=as.data.frame(matrix(NA,ncol=7,nrow=18*9)) %>%
setNames(c("trial_id","A_pro","B_pro","A_state","B_state","count","hm"))
for (i in 1:18){
for (j in 1:length(st_a)){
p=(i-1)*9+j
md.sub$trial_id[p]=i
md.sub$A_pro[p]=pro_a[ceiling(i/2)]
md.sub$B_pro[p]=pro_b[ceiling(i/2)]
md.sub$A_state[p]=st_a[j]
md.sub$B_state[p]=st_b[j]
md.sub$count[p]=df.sig %>% subset(trial_id==i & A_state== st_a[j] & B_state==st_b[j]) %>% nrow()
md.sub$hm[p]=md.sub$count[p]/(df.sig %>% subset(trial_id==i) %>% nrow())
}
}
return(md.sub)
}
MyModAcc <- function(md.acc){
pro_a=c("G","P","N","G","P","N","G","P","N")
pro_b=c("G","G","G","P","P","P","N","N","N")
v.md.acc=c()
for (i in 1:9){
for (j in 1:2){
choice_sub=md.acc %>% subset(trial_id==(i-1)*2+j & A_state==pro_a[i] & B_state==pro_b[i])
v.md.acc=c(v.md.acc,choice_sub$ratio[1])
}
}
return(mean(v.md.acc))
}
#+ load model data -------------------
#' # load model data
load("../model/normative/df.model.Rda")
md.nor=df.model
load("../model/normative/df.model.Rda")
md.nor.noi=df.model
load("../model/feature_based/df.model.mean.Rda")
md.cue1=df.model
load("../model/feature_based/df.model.num.Rda")
md.cue2=df.model
load("../model/sequential/df.model.Rda")
md.sqc=df.model
#calculate the accuracy
MyModAcc(md.nor)
# MyModAcc(md.nor.noi)
MyModAcc(md.cue1)
MyModAcc(md.cue2)
MyModAcc(md.sqc)
#reshape subject data
df.final$trial_id=as.numeric(df.final$trial_id)
md.sub=MySubFit9()
cb.nor=merge(md.sub,md.nor,by=c("trial_id","A_pro","B_pro","A_state","B_state"))
cb.nor$choice=paste(cb.nor$A_state,cb.nor$B_state,sep = "")
cb.cue1=merge(md.sub,md.cue1,by=c("trial_id","A_pro","B_pro","A_state","B_state"))
cb.cue1$choice=paste(cb.cue1$A_state,cb.cue1$B_state,sep = "")
cb.cue2=merge(md.sub,md.cue2,by=c("trial_id","A_pro","B_pro","A_state","B_state"))
cb.cue2$choice=paste(cb.cue2$A_state,cb.cue2$B_state,sep = "")
colnames(md.cue1)[ncol(md.cue1)]="ratio1"
colnames(md.cue2)[ncol(md.cue2)]="ratio2"
md.heur=merge(md.cue1,md.cue2,by=c("trial_id","A_pro","B_pro","A_state","B_state"))
cb.heur=merge(md.heur,md.sub,by=c("trial_id","A_pro","B_pro","A_state","B_state"))
cb.heur$choice=paste(cb.heur$A_state,cb.heur$B_state,sep = "")
cb.sqc=merge(md.sub,md.sqc,by=c("trial_id","A_pro","B_pro","A_state","B_state"))
cb.sqc$choice=paste(cb.sqc$A_state,cb.sqc$B_state,sep = "")
View(cb.nor)
choi=data.frame(pro=c(cb.nor$A_pro,cb.nor$B_pro),state=c(cb.nor$A_state,cb.nor$B_state),ratio=c(cb.nor$ratio,cb.nor$ratio))
View(choi)
sum(choi$pro=="G" & choi$state=="G")
choi=data.frame(pro=c(cb.nor$A_pro,cb.nor$B_pro),state=c(cb.nor$A_state,cb.nor$B_state),ratio=c(cb.nor$ratio,cb.nor$ratio))
sum(choi$ratio( choi$pro=="G" & choi$state=="G") )
sum(choi$ratio[choi$pro=="G" & choi$state=="G"])
choi$ratio[choi$pro=="G" & choi$state=="G"]
mean(choi$ratio[choi$pro=="G" & choi$state=="G"])
mean(choi$ratio[choi$pro=="G" & choi$state=="G"])
choi=data.frame(trial_id=c(cb.nor$trial_id,cb.nor$trial_id),pro=c(cb.nor$A_pro,cb.nor$B_pro),state=c(cb.nor$A_state,cb.nor$B_state),ratio=c(cb.nor$ratio,cb.nor$ratio))
mean(choi$ratio[choi$pro=="G" & choi$state=="G"])
mean(choi$ratio[choi$pro=="G" & choi$state=="G"])
choi$ratio[choi$pro=="G" & choi$state=="G"]
pic.model
pic.sub=as.data.frame(matrix(NA, nrow = 6, ncol = 4))%>%
setNames(c("trial_id","component","pro","state","ratio"))
pic.sub=as.data.frame(matrix(NA, nrow = 6, ncol = 4))%>%
setNames(c("trial_id","component","pro","state","ratio"))
pic.sub=as.data.frame(matrix(NA, nrow = 6, ncol = 5))%>%
setNames(c("trial_id","component","pro","state","ratio"))
pic.model=as.data.frame(matrix(NA, nrow = 0, ncol = 4))%>%
setNames(c("trial_id","component","state","ratio"))
for (run in 1:18){
pic.sub=as.data.frame(matrix(NA, nrow = 6, ncol = 5))%>%
setNames(c("trial_id","component","pro","state","ratio"))
load(paste(filepath,filelist[run],sep = ""))
online_inder$trial_id=run
online_inder= online_inder%>% subset(model=="normative")
online_inder=online_inder %>% subset(stage==5)
online_inder$ratio=online_inder$ratio/sum(online_inder$ratio) #normalization
pic.sub$component=c("A","A","A","B","B","B")
pic.sub$pro=c(rep(a_sta[i],3),rep(b_sta[i],3))
pic.sub$state=c("G","N","P","G","N","P")
pic.sub$trial_id=run
pic.sub$ratio[1]=sum(online_inder$ratio[online_inder$A_state=="G"])
pic.sub$ratio[2]=sum(online_inder$ratio[online_inder$A_state=="N"])
pic.sub$ratio[3]=sum(online_inder$ratio[online_inder$A_state=="P"])
pic.sub$ratio[4]=sum(online_inder$ratio[online_inder$B_state=="G"])
pic.sub$ratio[5]=sum(online_inder$ratio[online_inder$B_state=="N"])
pic.sub$ratio[6]=sum(online_inder$ratio[online_inder$B_state=="P"])
pic.model=rbind(pic.model,pic.sub)
}
View(pic.model)
a_sta=rep(c("G","G","P","P","N","N"),3)
b_sta=c(rep("G",6),rep("P",6),rep("N",6))
pic.model=as.data.frame(matrix(NA, nrow = 0, ncol = 4))%>%
setNames(c("trial_id","component","state","ratio"))
for (run in 1:18){
pic.sub=as.data.frame(matrix(NA, nrow = 6, ncol = 5))%>%
setNames(c("trial_id","component","pro","state","ratio"))
load(paste(filepath,filelist[run],sep = ""))
online_inder$trial_id=run
online_inder= online_inder%>% subset(model=="normative")
online_inder=online_inder %>% subset(stage==5)
online_inder$ratio=online_inder$ratio/sum(online_inder$ratio) #normalization
pic.sub$component=c("A","A","A","B","B","B")
pic.sub$pro=c(rep(a_sta[run],3),rep(b_sta[run],3))
pic.sub$state=c("G","N","P","G","N","P")
pic.sub$trial_id=run
pic.sub$ratio[1]=sum(online_inder$ratio[online_inder$A_state=="G"])
pic.sub$ratio[2]=sum(online_inder$ratio[online_inder$A_state=="N"])
pic.sub$ratio[3]=sum(online_inder$ratio[online_inder$A_state=="P"])
pic.sub$ratio[4]=sum(online_inder$ratio[online_inder$B_state=="G"])
pic.sub$ratio[5]=sum(online_inder$ratio[online_inder$B_state=="N"])
pic.sub$ratio[6]=sum(online_inder$ratio[online_inder$B_state=="P"])
pic.model=rbind(pic.model,pic.sub)
}
View(pic.model)
ggplot(pic.model,aes(x=component, y=ratio,fill=state))+
geom_bar(stat='identity',position="dodge",colour="black")+
facet_wrap(~trial_id,nrow=3,labeller = as_labeller(pic.label))+
xlab("component")
choi=data.frame(pro=c(pic.model$A_pro,pic.model$B_pro),state=c(pic.model$A_state,pic.model$B_state))
sum(choi$ratio[choi$pro=="G" & choi$state=="G"])
choi=data.frame(pro=c(pic.model$A_pro,pic.model$B_pro),state=c(pic.model$A_state,pic.model$B_state))
choi
choi=data.frame(pro=pic.model$pro,state=pic.model$state)
sum(choi$ratio[choi$pro=="G" & choi$state=="G"])
pic.model$pro
choi=data.frame(pro=pic.model$pro,state=pic.model$state,ratio=pic.model$ratio)
sum(choi$ratio[choi$pro=="G" & choi$state=="G"])
sum(choi$ratio[choi$pro=="G" & choi$state=="N"])
sum(choi$ratio[choi$pro=="G" & choi$state=="G"])
mean(choi$ratio[choi$pro=="G" & choi$state=="G"])
mean(choi$ratio[choi$pro=="G" & choi$state=="N"])
mean(choi$ratio[choi$pro=="G" & choi$state=="P"])
sum(choi$ratio[choi$pro=="N" & choi$state=="G"])
mean(choi$ratio[choi$pro=="N" & choi$state=="G"])
mean(choi$ratio[choi$pro=="N" & choi$state=="N"])
mean(choi$ratio[choi$pro=="N" & choi$state=="P"])
mean(choi$ratio[choi$pro=="P" & choi$state=="G"])
mean(choi$ratio[choi$pro=="P" & choi$state=="N"])
mean(choi$ratio[choi$pro=="P" & choi$state=="P"])
View(choi)
choi=data.frame(pro=c(df.final$A_pro,df.final$B_pro),state=c(df.final$A_state,df.final$B_state))
sum(choi$pro=="G" & choi$state=="G") /sum(choi$pro=="G")
sum(choi$pro=="G" & choi$state=="N") /sum(choi$pro=="G")
sum(choi$pro=="G" & choi$state=="P") /sum(choi$pro=="G")
sum(choi$pro=="N" & choi$state=="G") /sum(choi$pro=="N")
sum(choi$pro=="N" & choi$state=="N") /sum(choi$pro=="N")
sum(choi$pro=="N" & choi$state=="P") /sum(choi$pro=="N")
sum(choi$pro=="P" & choi$state=="G") /sum(choi$pro=="P")
sum(choi$pro=="P" & choi$state=="N") /sum(choi$pro=="P")
sum(choi$pro=="P" & choi$state=="P") /sum(choi$pro=="P")
chisq.test(choi$state)
chisq.test(c(1,2,3,1,2))
chisq.test(c("A","B","C","A","B"))
choi$code=0
choi$code[choi$state=="G"]=1
choi$code[choi$state=="P"]=2
choi$code[choi$state=="N"]=3
choi$code=0
choi$code[choi$state=="G"]=1
choi$code[choi$state=="N"]=2
choi$code[choi$state=="P"]=3
View(choi)
chisq.test(choi$code)
MySubFit6 <-function(){
pic.sub.a=plyr::count(df.final,c("trial_id","A_state"))
pic.sub.a$cpn="A"
colnames(pic.sub.a)=c("trial_id","state","freq","cpn")
pic.sub.b=plyr::count(df.final,c("trial_id","B_state"))
pic.sub.b$cpn="B"
colnames(pic.sub.b)=c("trial_id","state","freq","cpn")
pic.sub=rbind(pic.sub.a,pic.sub.b)
sub_num=plyr::count(df.final,c("trial_id"))
sub_num=sub_num$freq[1]
pic.sub$hm=pic.sub$freq/sub_num
for (i in c("A","B")){
for (j in c("G","P","N")){
for (m in 1:18){
if (nrow(subset(pic.sub,(cpn==i&state==j&trial_id==m)))==0){
pic.sub[nrow(pic.sub) + 1,]=c(m,j,0,i,0)
}
}
}
}
pic.sub$trial_id=as.numeric(pic.sub$trial_id)
pic.sub$hm=as.numeric(pic.sub$hm)
pic.sub=pic.sub[
order( pic.sub[,"trial_id"], pic.sub[,"cpn"],pic.sub[,"state"]),
]
return(pic.sub)
}
pic.sub=MySubFit6()
pic.par=MySubFit6()
,
ggplot(pic.par,aes(x=component, y=ratio,fill=state))+
geom_bar(stat='identity',position="dodge",colour="black")+
facet_wrap(~trial_id,nrow=3,labeller = as_labeller(pic.label))+
xlab("component")
ggplot(pic.par,aes(x=cpn, y=ratio,fill=state))+
geom_bar(stat='identity',position="dodge",colour="black")+
facet_wrap(~trial_id,nrow=3,labeller = as_labeller(pic.label))+
xlab("component")
View(pic.par)
ggplot(pic.par,aes(x=cpn, y=hm,fill=state))+
geom_bar(stat='identity',position="dodge",colour="black")+
facet_wrap(~trial_id,nrow=3,labeller = as_labeller(pic.label))+
xlab("component")
